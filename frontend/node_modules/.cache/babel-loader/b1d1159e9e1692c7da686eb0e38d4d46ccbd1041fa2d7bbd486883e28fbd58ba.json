{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\Projetos\\\\node.js\\\\criptogt\\\\frontend\\\\src\\\\pages\\\\OrdensAuto.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './OrdensAuto.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdensAuto = () => {\n  _s();\n  const [contas, setContas] = useState([]);\n  const [moedasDisponiveis, setMoedasDisponiveis] = useState([]);\n  const [ordens, setOrdens] = useState([]);\n  const [editId, setEditId] = useState(null);\n  const [form, setForm] = useState({\n    conta_id: '',\n    corretora: '',\n    moeda: '',\n    valor_atual: '',\n    percentual_compra: '',\n    percentual_venda: '',\n    valor_ordem: '',\n    valor_compra: '',\n    valor_venda: '',\n    ativo: true,\n    status: 'pendente'\n  });\n  const API_URL = \"http://localhost:5000/api\";\n  const token = localStorage.getItem('token');\n  const authHeaders = {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  };\n  const carregarDadosIniciais = async () => {\n    if (!token) return;\n    try {\n      const [contasRes, ordensRes, moedasRes] = await Promise.all([axios.get(`${API_URL}/contas`, authHeaders), axios.get(`${API_URL}/ordens_auto`, authHeaders), axios.get(`${API_URL}/cotacao/symbols`, authHeaders)]);\n      setContas(contasRes.data);\n      setOrdens(ordensRes.data);\n      setMoedasDisponiveis(moedasRes.data);\n    } catch (error) {\n      console.error(\"Erro ao carregar dados iniciais:\", error);\n    }\n  };\n  useEffect(() => {\n    carregarDadosIniciais();\n  }, []);\n  useEffect(() => {\n    const va = parseFloat(form.valor_atual);\n    const pc = parseFloat(form.percentual_compra);\n    const pv = parseFloat(form.percentual_venda);\n    let novosValores = {};\n    let valorCompraCalculado = parseFloat(form.valor_compra);\n    if (!isNaN(va) && !isNaN(pc)) {\n      valorCompraCalculado = va * (1 - pc / 100);\n      novosValores.valor_compra = valorCompraCalculado; // Salva sem arredondar\n    }\n    if (!isNaN(valorCompraCalculado) && !isNaN(pv)) {\n      const valorVendaCalculado = valorCompraCalculado * (1 + pv / 100);\n      novosValores.valor_venda = valorVendaCalculado; // Salva sem arredondar\n    }\n    if (Object.keys(novosValores).length > 0) {\n      setForm(prev => ({\n        ...prev,\n        ...novosValores\n      }));\n    }\n  }, [form.valor_atual, form.percentual_compra, form.percentual_venda]);\n  useEffect(() => {\n    const buscarCotacao = async () => {\n      if (!form.moeda || !form.corretora) return;\n      try {\n        const res = await axios.get(`${API_URL}/cotacao/binance/${form.moeda}`, authHeaders);\n        setForm(prev => ({\n          ...prev,\n          valor_atual: res.data.valor_atual\n        }));\n      } catch (err) {\n        setForm(prev => ({\n          ...prev,\n          valor_atual: ''\n        }));\n      }\n    };\n    if (form.moeda) {\n      buscarCotacao();\n    }\n  }, [form.moeda, form.corretora]);\n  const formatarPreco = preco => {\n    if (!preco || isNaN(preco)) return '';\n    const p = parseFloat(preco);\n    return p < 1 ? p.toPrecision(4) : p.toFixed(2);\n  };\n\n  // ... (O restante das funções de handle, resetForm, etc. permanecem as mesmas)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ordens-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ordem-form-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: editId ? 'Editar Ordem Automática' : 'Cadastro de Ordem Automática'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"conta_id\",\n            value: form.conta_id,\n            onChange: handleChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione a Conta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), contas.map(conta => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: conta.id,\n              children: [conta.nome, \" (\", conta.corretora, \")\"]\n            }, conta.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"moeda\",\n            value: form.moeda,\n            onChange: handleChange,\n            required: true,\n            disabled: !form.corretora,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione a moeda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), moedasDisponiveis.map((moeda, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: moeda,\n              children: moeda\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 68\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"valor_atual\",\n            placeholder: \"Valor Atual (USD)\",\n            type: \"text\",\n            value: form.valor_atual,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"valor_ordem\",\n            placeholder: \"Valor da Ordem (USDT)\",\n            type: \"number\",\n            step: \"any\",\n            value: form.valor_ordem,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"percentual_compra\",\n            placeholder: \"% Queda p/ Compra\",\n            type: \"number\",\n            step: \"any\",\n            value: form.percentual_compra,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"valor_compra\",\n            placeholder: \"Valor de Compra\",\n            type: \"text\",\n            value: formatarPreco(form.valor_compra),\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"percentual_venda\",\n            placeholder: \"% Alta p/ Venda\",\n            type: \"number\",\n            step: \"any\",\n            value: form.percentual_venda,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"valor_venda\",\n            placeholder: \"Valor de Venda\",\n            type: \"text\",\n            value: formatarPreco(form.valor_venda),\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"botoes-acao-ordem\",\n          children: [editId && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn cancelar\",\n            onClick: resetForm,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn salvar\",\n            children: editId ? 'Atualizar Ordem' : 'Salvar Ordem'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ordens-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ordens Cadastradas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabela-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Conta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Moeda\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 47\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Valor Ordem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 61\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Valor Compra\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Valor Venda\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 54\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"A\\xE7\\xF5es\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 48\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: ordens.map(ordem => {\n              var _contas$find;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ((_contas$find = contas.find(c => c.id === ordem.conta_id)) === null || _contas$find === void 0 ? void 0 : _contas$find.nome) || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ordem.moeda\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"$\", parseFloat(ordem.valor_ordem).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"$\", formatarPreco(ordem.valor_compra)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"$\", formatarPreco(ordem.valor_venda)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 33\n                }, this)]\n              }, ordem.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(OrdensAuto, \"OWysHYHQNM12YzP1K/XbEdMcj8o=\");\n_c = OrdensAuto;\nexport default OrdensAuto;\nvar _c;\n$RefreshReg$(_c, \"OrdensAuto\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","OrdensAuto","_s","contas","setContas","moedasDisponiveis","setMoedasDisponiveis","ordens","setOrdens","editId","setEditId","form","setForm","conta_id","corretora","moeda","valor_atual","percentual_compra","percentual_venda","valor_ordem","valor_compra","valor_venda","ativo","status","API_URL","token","localStorage","getItem","authHeaders","headers","carregarDadosIniciais","contasRes","ordensRes","moedasRes","Promise","all","get","data","error","console","va","parseFloat","pc","pv","novosValores","valorCompraCalculado","isNaN","valorVendaCalculado","Object","keys","length","prev","buscarCotacao","res","err","formatarPreco","preco","p","toPrecision","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleSubmit","name","value","onChange","handleChange","required","map","conta","id","nome","disabled","idx","placeholder","type","readOnly","step","onClick","resetForm","ordem","_contas$find","find","c","_c","$RefreshReg$"],"sources":["C:/GitHub/Projetos/node.js/criptogt/frontend/src/pages/OrdensAuto.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './OrdensAuto.css';\n\nconst OrdensAuto = () => {\n    const [contas, setContas] = useState([]);\n    const [moedasDisponiveis, setMoedasDisponiveis] = useState([]);\n    const [ordens, setOrdens] = useState([]);\n    const [editId, setEditId] = useState(null);\n    const [form, setForm] = useState({\n        conta_id: '', corretora: '', moeda: '', valor_atual: '',\n        percentual_compra: '', percentual_venda: '', valor_ordem: '',\n        valor_compra: '', valor_venda: '', ativo: true, status: 'pendente'\n    });\n\n    const API_URL = \"http://localhost:5000/api\";\n    const token = localStorage.getItem('token');\n    const authHeaders = { headers: { 'Authorization': `Bearer ${token}` } };\n\n    const carregarDadosIniciais = async () => {\n        if (!token) return;\n        try {\n            const [contasRes, ordensRes, moedasRes] = await Promise.all([\n                axios.get(`${API_URL}/contas`, authHeaders),\n                axios.get(`${API_URL}/ordens_auto`, authHeaders),\n                axios.get(`${API_URL}/cotacao/symbols`, authHeaders)\n            ]);\n            setContas(contasRes.data);\n            setOrdens(ordensRes.data);\n            setMoedasDisponiveis(moedasRes.data);\n        } catch (error) {\n            console.error(\"Erro ao carregar dados iniciais:\", error);\n        }\n    };\n\n    useEffect(() => {\n        carregarDadosIniciais();\n    }, []);\n    \n    useEffect(() => {\n        const va = parseFloat(form.valor_atual);\n        const pc = parseFloat(form.percentual_compra);\n        const pv = parseFloat(form.percentual_venda);\n        \n        let novosValores = {};\n        let valorCompraCalculado = parseFloat(form.valor_compra);\n\n        if (!isNaN(va) && !isNaN(pc)) {\n            valorCompraCalculado = va * (1 - pc / 100);\n            novosValores.valor_compra = valorCompraCalculado; // Salva sem arredondar\n        }\n        \n        if (!isNaN(valorCompraCalculado) && !isNaN(pv)) {\n            const valorVendaCalculado = valorCompraCalculado * (1 + pv / 100);\n            novosValores.valor_venda = valorVendaCalculado; // Salva sem arredondar\n        }\n\n        if(Object.keys(novosValores).length > 0) {\n            setForm(prev => ({ ...prev, ...novosValores }));\n        }\n    }, [form.valor_atual, form.percentual_compra, form.percentual_venda]);\n    \n    useEffect(() => {\n        const buscarCotacao = async () => {\n            if (!form.moeda || !form.corretora) return;\n            try {\n                const res = await axios.get(`${API_URL}/cotacao/binance/${form.moeda}`, authHeaders);\n                setForm(prev => ({ ...prev, valor_atual: res.data.valor_atual }));\n            } catch (err) {\n                setForm(prev => ({ ...prev, valor_atual: ''}));\n            }\n        };\n        if (form.moeda) {\n            buscarCotacao();\n        }\n    }, [form.moeda, form.corretora]);\n\n    const formatarPreco = (preco) => {\n        if (!preco || isNaN(preco)) return '';\n        const p = parseFloat(preco);\n        return p < 1 ? p.toPrecision(4) : p.toFixed(2);\n    };\n\n    // ... (O restante das funções de handle, resetForm, etc. permanecem as mesmas)\n\n    return (\n        <div className=\"ordens-container\">\n            <div className=\"ordem-form-box\">\n                <h2>{editId ? 'Editar Ordem Automática' : 'Cadastro de Ordem Automática'}</h2>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-grid\">\n                        <select name=\"conta_id\" value={form.conta_id} onChange={handleChange} required>\n                            <option value=\"\">Selecione a Conta</option>\n                            {contas.map(conta => (\n                                <option key={conta.id} value={conta.id}>\n                                {conta.nome} ({conta.corretora})\n                                </option>\n                            ))}\n                        </select>\n                        <select name=\"moeda\" value={form.moeda} onChange={handleChange} required disabled={!form.corretora}>\n                            <option value=\"\">Selecione a moeda</option>\n                            {moedasDisponiveis.map((moeda, idx) => <option key={idx} value={moeda}>{moeda}</option>)}\n                        </select>\n                        <input name=\"valor_atual\" placeholder=\"Valor Atual (USD)\" type=\"text\" value={form.valor_atual} readOnly />\n                        <input name=\"valor_ordem\" placeholder=\"Valor da Ordem (USDT)\" type=\"number\" step=\"any\" value={form.valor_ordem} onChange={handleChange} required />\n                        <input name=\"percentual_compra\" placeholder=\"% Queda p/ Compra\" type=\"number\" step=\"any\" value={form.percentual_compra} onChange={handleChange} required />\n                        <input name=\"valor_compra\" placeholder=\"Valor de Compra\" type=\"text\" value={formatarPreco(form.valor_compra)} readOnly />\n                        <input name=\"percentual_venda\" placeholder=\"% Alta p/ Venda\" type=\"number\" step=\"any\" value={form.percentual_venda} onChange={handleChange} required />\n                        <input name=\"valor_venda\" placeholder=\"Valor de Venda\" type=\"text\" value={formatarPreco(form.valor_venda)} readOnly />\n                    </div>\n                    <div className=\"botoes-acao-ordem\">\n                        {editId && (<button type=\"button\" className=\"btn cancelar\" onClick={resetForm}>Cancelar</button>)}\n                        <button type=\"submit\" className=\"btn salvar\">{editId ? 'Atualizar Ordem' : 'Salvar Ordem'}</button>\n                    </div>\n                </form>\n            </div>\n            {/* ... (O restante da tabela JSX permanece o mesmo, mas use formatarPreco para exibir os valores) ... */}\n            <div className=\"ordens-grid\">\n                <h3>Ordens Cadastradas</h3>\n                <div className=\"tabela-wrapper\">\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Conta</th><th>Moeda</th><th>Valor Ordem</th>\n                                <th>Valor Compra</th><th>Valor Venda</th>\n                                <th>Status</th><th>Ações</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {ordens.map((ordem) => (\n                            <tr key={ordem.id}>\n                                <td>{contas.find(c => c.id === ordem.conta_id)?.nome || 'N/A'}</td>\n                                <td>{ordem.moeda}</td>\n                                <td>${parseFloat(ordem.valor_ordem).toFixed(2)}</td>\n                                <td>${formatarPreco(ordem.valor_compra)}</td>\n                                <td>${formatarPreco(ordem.valor_venda)}</td>\n                                <td>{/* ... */}</td>\n                                <td>{/* ... */}</td>\n                            </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default OrdensAuto;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}