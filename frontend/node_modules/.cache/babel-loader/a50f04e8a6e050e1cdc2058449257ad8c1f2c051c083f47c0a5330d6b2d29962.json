{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\Projetos\\\\node.js\\\\criptogt\\\\frontend\\\\src\\\\pages\\\\OrdensAuto.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './OrdensAuto.css'; // Mantenha a importação do CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdensAuto = () => {\n  _s();\n  // ... (todo o código useState e useEffect permanece o mesmo)\n  const [contas, setContas] = useState([]);\n  const [moedasDisponiveis, setMoedasDisponiveis] = useState([]);\n  const [ordens, setOrdens] = useState([]);\n  const [form, setForm] = useState({\n    conta_id: '',\n    corretora: '',\n    moeda: '',\n    valor_atual: '',\n    percentual_compra: '',\n    percentual_venda: '',\n    valor_ordem: '',\n    valor_compra: '',\n    valor_venda: ''\n  });\n  useEffect(() => {\n    carregarContas();\n    carregarOrdens();\n  }, []);\n  useEffect(() => {\n    const carregarMoedas = async () => {\n      try {\n        if (form.corretora === 'binance') {\n          const res = await axios.get('http://localhost:5000/api/cotacao/symbols');\n          setMoedasDisponiveis(res.data);\n        } else if (form.corretora === 'gateio') {\n          const res = await axios.get(`http://localhost:5000/api/gateio/symbols`);\n          setMoedasDisponiveis(res.data);\n        } else {\n          setMoedasDisponiveis([]);\n        }\n      } catch (err) {\n        setMoedasDisponiveis([]);\n        console.error('Erro ao carregar moedas da corretora:', err);\n      }\n    };\n    if (form.corretora) {\n      carregarMoedas();\n    }\n  }, [form.corretora]);\n  useEffect(() => {\n    const va = parseFloat(form.valor_atual);\n    const pc = parseFloat(form.percentual_compra);\n    const pv = parseFloat(form.percentual_venda);\n    if (!isNaN(va) && !isNaN(pc)) {\n      setForm(prev => ({\n        ...prev,\n        valor_compra: (va * (1 - pc / 100)).toFixed(2)\n      }));\n    }\n    if (!isNaN(va) && !isNaN(pv)) {\n      setForm(prev => ({\n        ...prev,\n        valor_venda: (va * (1 + pv / 100)).toFixed(2)\n      }));\n    }\n  }, [form.valor_atual, form.percentual_compra, form.percentual_venda]);\n  useEffect(() => {\n    const buscarCotacao = async () => {\n      if (!form.moeda || !form.corretora) return;\n      try {\n        const res = await axios.get(`http://localhost:5000/api/cotacao/binance/${form.moeda}`);\n        const valor = parseFloat(res.data.valor_atual);\n        setForm(prev => ({\n          ...prev,\n          valor_atual: valor.toFixed(2)\n        }));\n      } catch (err) {\n        alert(`Erro ao buscar valor da moeda: ${err.message}`);\n        console.error(err);\n      }\n    };\n    buscarCotacao();\n  }, [form.moeda, form.corretora]);\n  const carregarContas = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/contas\");\n      setContas(res.data);\n    } catch (err) {\n      console.error(\"Erro ao carregar contas:\", err);\n      alert(\"Não foi possível carregar suas contas.\");\n    }\n  };\n  const carregarOrdens = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/ordens_auto');\n      setOrdens(response.data);\n    } catch (error) {\n      console.error('Erro ao carregar ordens:', error);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'conta_id') {\n      const contaSelecionada = contas.find(c => c.id === parseInt(value));\n      setForm(prev => ({\n        ...prev,\n        conta_id: value,\n        corretora: contaSelecionada ? contaSelecionada.corretora.toLowerCase() : '',\n        moeda: '',\n        valor_atual: ''\n      }));\n    } else {\n      setForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/api/ordens_auto', form);\n      alert('✅ Ordem salva com sucesso!');\n      setForm({\n        conta_id: '',\n        corretora: '',\n        moeda: '',\n        valor_atual: '',\n        percentual_compra: '',\n        percentual_venda: '',\n        valor_ordem: '',\n        valor_compra: '',\n        valor_venda: ''\n      });\n      carregarOrdens();\n    } catch (error) {\n      alert('Erro ao salvar ordem.');\n      console.error(\"Erro no submit:\", error);\n    }\n  };\n\n  // Função para obter a classe CSS com base no status\n  const getStatusClassName = status => {\n    switch (status.toLowerCase()) {\n      case 'comprado':\n        return 'status-comprado';\n      case 'vendido':\n        return 'status-vendido';\n      case 'pendente':\n        return 'status-pendente';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ordens-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ordens Autom\\xE1ticas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ordem-form\",\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ordens Cadastradas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ordens-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Conta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Moeda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Vlr. Refer\\xEAncia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"% Compra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"% Venda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valor Ordem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valor Compra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valor Venda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: ordens.map(ordem => {\n          var _contas$find;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_contas$find = contas.find(c => c.id === ordem.conta_id)) === null || _contas$find === void 0 ? void 0 : _contas$find.nome) || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ordem.moeda\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", parseFloat(ordem.valor_referencia).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [ordem.percentual_compra, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [ordem.percentual_venda, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", parseFloat(ordem.valor_ordem).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", parseFloat(ordem.valor_compra).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", parseFloat(ordem.valor_venda).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: getStatusClassName(ordem.status),\n                children: ordem.status.charAt(0).toUpperCase() + ordem.status.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, ordem.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdensAuto, \"4qUy+q11G/MRMVWmCztbEOgW2gA=\");\n_c = OrdensAuto;\nexport default OrdensAuto;\nvar _c;\n$RefreshReg$(_c, \"OrdensAuto\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","OrdensAuto","_s","contas","setContas","moedasDisponiveis","setMoedasDisponiveis","ordens","setOrdens","form","setForm","conta_id","corretora","moeda","valor_atual","percentual_compra","percentual_venda","valor_ordem","valor_compra","valor_venda","carregarContas","carregarOrdens","carregarMoedas","res","get","data","err","console","error","va","parseFloat","pc","pv","isNaN","prev","toFixed","buscarCotacao","valor","alert","message","response","handleChange","e","name","value","target","contaSelecionada","find","c","id","parseInt","toLowerCase","handleSubmit","preventDefault","post","getStatusClassName","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","ordem","_contas$find","nome","valor_referencia","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["C:/GitHub/Projetos/node.js/criptogt/frontend/src/pages/OrdensAuto.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './OrdensAuto.css'; // Mantenha a importação do CSS\n\nconst OrdensAuto = () => {\n  // ... (todo o código useState e useEffect permanece o mesmo)\n  const [contas, setContas] = useState([]);\n  const [moedasDisponiveis, setMoedasDisponiveis] = useState([]);\n  const [ordens, setOrdens] = useState([]);\n  const [form, setForm] = useState({\n    conta_id: '',\n    corretora: '',\n    moeda: '',\n    valor_atual: '',\n    percentual_compra: '',\n    percentual_venda: '',\n    valor_ordem: '',\n    valor_compra: '',\n    valor_venda: ''\n  });\n\n  useEffect(() => {\n    carregarContas();\n    carregarOrdens();\n  }, []);\n  \n  useEffect(() => {\n    const carregarMoedas = async () => {\n      try {\n        if (form.corretora === 'binance') {\n          const res = await axios.get('http://localhost:5000/api/cotacao/symbols');\n          setMoedasDisponiveis(res.data);\n        } else if (form.corretora === 'gateio') {\n          const res = await axios.get(`http://localhost:5000/api/gateio/symbols`);\n          setMoedasDisponiveis(res.data);\n        } else {\n          setMoedasDisponiveis([]);\n        }\n      } catch (err) {\n        setMoedasDisponiveis([]);\n        console.error('Erro ao carregar moedas da corretora:', err);\n      }\n    };\n\n    if (form.corretora) {\n      carregarMoedas();\n    }\n  }, [form.corretora]);\n\n  useEffect(() => {\n    const va = parseFloat(form.valor_atual);\n    const pc = parseFloat(form.percentual_compra);\n    const pv = parseFloat(form.percentual_venda);\n\n    if (!isNaN(va) && !isNaN(pc)) {\n      setForm(prev => ({\n        ...prev,\n        valor_compra: (va * (1 - pc / 100)).toFixed(2),\n      }));\n    }\n    if (!isNaN(va) && !isNaN(pv)) {\n      setForm(prev => ({\n        ...prev,\n        valor_venda: (va * (1 + pv / 100)).toFixed(2),\n      }));\n    }\n  }, [form.valor_atual, form.percentual_compra, form.percentual_venda]);\n\n  useEffect(() => {\n    const buscarCotacao = async () => {\n      if (!form.moeda || !form.corretora) return;\n\n      try {\n        const res = await axios.get(`http://localhost:5000/api/cotacao/binance/${form.moeda}`);\n        const valor = parseFloat(res.data.valor_atual);\n        setForm(prev => ({\n          ...prev,\n          valor_atual: valor.toFixed(2),\n        }));\n      } catch (err) {\n        alert(`Erro ao buscar valor da moeda: ${err.message}`);\n        console.error(err);\n      }\n    };\n\n    buscarCotacao();\n  }, [form.moeda, form.corretora]);\n\n  const carregarContas = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/contas\");\n      setContas(res.data);\n    } catch (err) {\n      console.error(\"Erro ao carregar contas:\", err);\n      alert(\"Não foi possível carregar suas contas.\");\n    }\n  };\n\n  const carregarOrdens = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/ordens_auto');\n      setOrdens(response.data);\n    } catch (error) {\n      console.error('Erro ao carregar ordens:', error);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === 'conta_id') {\n      const contaSelecionada = contas.find(c => c.id === parseInt(value));\n      setForm(prev => ({\n        ...prev,\n        conta_id: value,\n        corretora: contaSelecionada ? contaSelecionada.corretora.toLowerCase() : '',\n        moeda: '',\n        valor_atual: ''\n      }));\n    } else {\n      setForm(prev => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/api/ordens_auto', form);\n      alert('✅ Ordem salva com sucesso!');\n      setForm({\n        conta_id: '',\n        corretora: '',\n        moeda: '',\n        valor_atual: '',\n        percentual_compra: '',\n        percentual_venda: '',\n        valor_ordem: '',\n        valor_compra: '',\n        valor_venda: ''\n      });\n      carregarOrdens();\n    } catch (error) {\n      alert('Erro ao salvar ordem.');\n      console.error(\"Erro no submit:\", error);\n    }\n  };\n  \n  // Função para obter a classe CSS com base no status\n  const getStatusClassName = (status) => {\n    switch (status.toLowerCase()) {\n      case 'comprado':\n        return 'status-comprado';\n      case 'vendido':\n        return 'status-vendido';\n      case 'pendente':\n        return 'status-pendente';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"ordens-container\">\n      <h2>Ordens Automáticas</h2>\n      <form className=\"ordem-form\" onSubmit={handleSubmit}>\n        {/* ... (o conteúdo do form permanece o mesmo) ... */}\n      </form>\n\n      <h3>Ordens Cadastradas</h3>\n      <table className=\"ordens-grid\">\n        <thead>\n          <tr>\n            <th>Conta</th>\n            <th>Moeda</th>\n            <th>Vlr. Referência</th>\n            <th>% Compra</th>\n            <th>% Venda</th>\n            <th>Valor Ordem</th>\n            <th>Valor Compra</th>\n            <th>Valor Venda</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {ordens.map((ordem) => (\n            <tr key={ordem.id}>\n              <td>{contas.find(c => c.id === ordem.conta_id)?.nome || 'N/A'}</td>\n              <td>{ordem.moeda}</td>\n              <td>${parseFloat(ordem.valor_referencia).toFixed(2)}</td>\n              <td>{ordem.percentual_compra}%</td>\n              <td>{ordem.percentual_venda}%</td>\n              <td>${parseFloat(ordem.valor_ordem).toFixed(2)}</td>\n              <td>${parseFloat(ordem.valor_compra).toFixed(2)}</td>\n              <td>${parseFloat(ordem.valor_venda).toFixed(2)}</td>\n              <td>\n                <span className={getStatusClassName(ordem.status)}>\n                  {ordem.status.charAt(0).toUpperCase() + ordem.status.slice(1)}\n                </span>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default OrdensAuto;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}