{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\Projetos\\\\node.js\\\\criptogt\\\\frontend\\\\src\\\\pages\\\\OrdensAuto.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './OrdensAuto.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdensAuto = () => {\n  _s();\n  const [contas, setContas] = useState([]);\n  const [moedasDisponiveis, setMoedasDisponiveis] = useState([]);\n  const [ordens, setOrdens] = useState([]);\n  const [editId, setEditId] = useState(null);\n  const [form, setForm] = useState({\n    conta_id: '',\n    corretora: '',\n    moeda: '',\n    valor_atual: '',\n    percentual_compra: '',\n    percentual_venda: '',\n    valor_ordem: '',\n    valor_compra: '',\n    valor_venda: '',\n    ativo: true,\n    status: 'pendente'\n  });\n  const API_URL = \"http://localhost:5000/api\";\n  const token = localStorage.getItem('token');\n  const authHeaders = {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  };\n  const carregarDadosIniciais = async () => {\n    if (!token) return;\n    try {\n      const [contasRes, ordensRes, moedasRes] = await Promise.all([axios.get(`${API_URL}/contas`, authHeaders), axios.get(`${API_URL}/ordens_auto`, authHeaders), axios.get(`${API_URL}/cotacao/symbols`, authHeaders)]);\n      setContas(contasRes.data);\n      setOrdens(ordensRes.data);\n      setMoedasDisponiveis(moedasRes.data);\n    } catch (error) {\n      console.error(\"Erro ao carregar dados iniciais:\", error);\n    }\n  };\n  useEffect(() => {\n    carregarDadosIniciais();\n  }, []);\n  useEffect(() => {\n    const va = parseFloat(form.valor_atual);\n    const pc = parseFloat(form.percentual_compra);\n    const pv = parseFloat(form.percentual_venda);\n    let novosValores = {};\n    if (!isNaN(va) && !isNaN(pc)) novosValores.valor_compra = (va * (1 - pc / 100)).toFixed(2);\n    if (!isNaN(va) && !isNaN(pv)) novosValores.valor_venda = (va * (1 + pv / 100)).toFixed(2);\n    if (Object.keys(novosValores).length > 0) {\n      setForm(prev => ({\n        ...prev,\n        ...novosValores\n      }));\n    }\n  }, [form.valor_atual, form.percentual_compra, form.percentual_venda]);\n  useEffect(() => {\n    const buscarCotacao = async () => {\n      if (!form.moeda || !form.corretora) return;\n      try {\n        const res = await axios.get(`${API_URL}/cotacao/binance/${form.moeda}`, authHeaders);\n        setForm(prev => ({\n          ...prev,\n          valor_atual: parseFloat(res.data.valor_atual).toFixed(2)\n        }));\n      } catch (err) {\n        setForm(prev => ({\n          ...prev,\n          valor_atual: ''\n        }));\n      }\n    };\n    buscarCotacao();\n  }, [form.moeda, form.corretora]);\n  const resetForm = () => {\n    setEditId(null);\n    setForm({\n      conta_id: '',\n      corretora: '',\n      moeda: '',\n      valor_atual: '',\n      percentual_compra: '',\n      percentual_venda: '',\n      valor_ordem: '',\n      valor_compra: '',\n      valor_venda: '',\n      ativo: true,\n      status: 'pendente'\n    });\n  };\n  const handleEdit = ordem => {\n    setEditId(ordem.id);\n    const contaDaOrdem = contas.find(c => c.id === ordem.conta_id);\n    setForm({\n      ...ordem,\n      corretora: contaDaOrdem ? contaDaOrdem.corretora.toLowerCase() : ''\n    });\n    window.scrollTo(0, 0);\n  };\n  const handleDelete = async id => {\n    if (window.confirm(\"Tem certeza?\")) {\n      try {\n        await axios.delete(`${API_URL}/ordens_auto/${id}`, authHeaders);\n        carregarDadosIniciais();\n      } catch (error) {\n        alert('Erro ao excluir ordem.');\n      }\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'conta_id') {\n      const contaSelecionada = contas.find(c => c.id === parseInt(value));\n      setForm(prev => ({\n        ...prev,\n        conta_id: value,\n        corretora: contaSelecionada ? contaSelecionada.corretora.toLowerCase() : '',\n        moeda: '',\n        valor_atual: ''\n      }));\n    } else {\n      setForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const url = editId ? `${API_URL}/ordens_auto/${editId}` : `${API_URL}/ordens_auto`;\n    const method = editId ? 'put' : 'post';\n    try {\n      await axios[method](url, form, authHeaders);\n      alert(`✅ Ordem ${editId ? 'atualizada' : 'salva'} com sucesso!`);\n      resetForm();\n      carregarDadosIniciais();\n    } catch (error) {\n      alert(`Erro ao ${editId ? 'atualizar' : 'salvar'} ordem.`);\n    }\n  };\n  const getStatusClassName = status => {\n    switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n      case 'comprado':\n        return 'status-comprado';\n      case 'vendido':\n        return 'status-vendido';\n      case 'pendente':\n        return 'status-pendente';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ordens-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ordem-form-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: editId ? 'Editar Ordem Automática' : 'Cadastro de Ordem Automática'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"conta_id\",\n            value: form.conta_id,\n            onChange: handleChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione a Conta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), contas.map(conta => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: conta.id,\n              children: [conta.nome, \" (\", conta.corretora, \")\"]\n            }, conta.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"moeda\",\n            value: form.moeda,\n            onChange: handleChange,\n            required: true,\n            disabled: !form.corretora,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione a moeda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), moedasDisponiveis.map((moeda, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: moeda,\n              children: moeda\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 54\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"valor_atual\",\n            placeholder: \"Valor Atual (USD)\",\n            type: \"text\",\n            value: form.valor_atual,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"valor_ordem\",\n            placeholder: \"Valor da Ordem (USDT)\",\n            type: \"number\",\n            step: \"0.01\",\n            value: form.valor_ordem,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"percentual_compra\",\n            placeholder: \"% Queda p/ Compra\",\n            type: \"number\",\n            step: \"0.01\",\n            value: form.percentual_compra,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"valor_compra\",\n            placeholder: \"Valor de Compra\",\n            type: \"number\",\n            step: \"any\",\n            value: form.valor_compra,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"percentual_venda\",\n            placeholder: \"% Alta p/ Venda\",\n            type: \"number\",\n            step: \"0.01\",\n            value: form.percentual_venda,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"valor_venda\",\n            placeholder: \"Valor de Venda\",\n            type: \"number\",\n            step: \"any\",\n            value: form.valor_venda,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"botoes-acao-ordem\",\n          children: [editId && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn cancelar\",\n            onClick: resetForm,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn salvar\",\n            children: editId ? 'Atualizar Ordem' : 'Salvar Ordem'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ordens-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ordens Cadastradas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Conta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Moeda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Valor Ordem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Valor Compra\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 63\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Valor Venda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"A\\xE7\\xF5es\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: ordens.map(ordem => {\n            var _contas$find;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_contas$find = contas.find(c => c.id === ordem.conta_id)) === null || _contas$find === void 0 ? void 0 : _contas$find.nome) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ordem.moeda\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", parseFloat(ordem.valor_ordem).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", parseFloat(ordem.valor_compra).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", parseFloat(ordem.valor_venda).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: getStatusClassName(ordem.status),\n                  children: ordem.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"botoes-acao-tabela\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEdit(ordem),\n                  className: \"btn-editar\",\n                  children: \"Editar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDelete(ordem.id),\n                  className: \"btn-excluir\",\n                  children: \"Excluir\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)]\n            }, ordem.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdensAuto, \"b3O1LiNSt9rpPo5fiGQhXvgHfzU=\");\n_c = OrdensAuto;\nexport default OrdensAuto;\nvar _c;\n$RefreshReg$(_c, \"OrdensAuto\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","OrdensAuto","_s","contas","setContas","moedasDisponiveis","setMoedasDisponiveis","ordens","setOrdens","editId","setEditId","form","setForm","conta_id","corretora","moeda","valor_atual","percentual_compra","percentual_venda","valor_ordem","valor_compra","valor_venda","ativo","status","API_URL","token","localStorage","getItem","authHeaders","headers","carregarDadosIniciais","contasRes","ordensRes","moedasRes","Promise","all","get","data","error","console","va","parseFloat","pc","pv","novosValores","isNaN","toFixed","Object","keys","length","prev","buscarCotacao","res","err","resetForm","handleEdit","ordem","id","contaDaOrdem","find","c","toLowerCase","window","scrollTo","handleDelete","confirm","delete","alert","handleChange","e","name","value","target","contaSelecionada","parseInt","handleSubmit","preventDefault","url","method","getStatusClassName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","map","conta","nome","disabled","idx","placeholder","type","readOnly","step","onClick","_contas$find","_c","$RefreshReg$"],"sources":["C:/GitHub/Projetos/node.js/criptogt/frontend/src/pages/OrdensAuto.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './OrdensAuto.css';\n\nconst OrdensAuto = () => {\n  const [contas, setContas] = useState([]);\n  const [moedasDisponiveis, setMoedasDisponiveis] = useState([]);\n  const [ordens, setOrdens] = useState([]);\n  const [editId, setEditId] = useState(null);\n  const [form, setForm] = useState({\n    conta_id: '',\n    corretora: '',\n    moeda: '',\n    valor_atual: '',\n    percentual_compra: '',\n    percentual_venda: '',\n    valor_ordem: '',\n    valor_compra: '',\n    valor_venda: '',\n    ativo: true,\n    status: 'pendente'\n  });\n\n  const API_URL = \"http://localhost:5000/api\";\n  const token = localStorage.getItem('token');\n  const authHeaders = { headers: { 'Authorization': `Bearer ${token}` } };\n\n  const carregarDadosIniciais = async () => {\n    if (!token) return;\n    try {\n      const [contasRes, ordensRes, moedasRes] = await Promise.all([\n        axios.get(`${API_URL}/contas`, authHeaders),\n        axios.get(`${API_URL}/ordens_auto`, authHeaders),\n        axios.get(`${API_URL}/cotacao/symbols`, authHeaders)\n      ]);\n      setContas(contasRes.data);\n      setOrdens(ordensRes.data);\n      setMoedasDisponiveis(moedasRes.data);\n    } catch (error) {\n      console.error(\"Erro ao carregar dados iniciais:\", error);\n    }\n  };\n\n  useEffect(() => {\n    carregarDadosIniciais();\n  }, []);\n\n  useEffect(() => {\n    const va = parseFloat(form.valor_atual);\n    const pc = parseFloat(form.percentual_compra);\n    const pv = parseFloat(form.percentual_venda);\n    let novosValores = {};\n\n    if (!isNaN(va) && !isNaN(pc)) novosValores.valor_compra = (va * (1 - pc / 100)).toFixed(2);\n    if (!isNaN(va) && !isNaN(pv)) novosValores.valor_venda = (va * (1 + pv / 100)).toFixed(2);\n    \n    if (Object.keys(novosValores).length > 0) {\n      setForm(prev => ({ ...prev, ...novosValores }));\n    }\n  }, [form.valor_atual, form.percentual_compra, form.percentual_venda]);\n\n  useEffect(() => {\n    const buscarCotacao = async () => {\n      if (!form.moeda || !form.corretora) return;\n      try {\n        const res = await axios.get(`${API_URL}/cotacao/binance/${form.moeda}`, authHeaders);\n        setForm(prev => ({ ...prev, valor_atual: parseFloat(res.data.valor_atual).toFixed(2) }));\n      } catch (err) {\n        setForm(prev => ({ ...prev, valor_atual: ''}));\n      }\n    };\n    buscarCotacao();\n  }, [form.moeda, form.corretora]);\n\n  const resetForm = () => {\n    setEditId(null);\n    setForm({\n      conta_id: '', corretora: '', moeda: '', valor_atual: '',\n      percentual_compra: '', percentual_venda: '', valor_ordem: '',\n      valor_compra: '', valor_venda: '', ativo: true, status: 'pendente'\n    });\n  };\n\n  const handleEdit = (ordem) => {\n    setEditId(ordem.id);\n    const contaDaOrdem = contas.find(c => c.id === ordem.conta_id);\n    setForm({\n        ...ordem,\n        corretora: contaDaOrdem ? contaDaOrdem.corretora.toLowerCase() : '',\n    });\n    window.scrollTo(0, 0);\n  };\n\n  const handleDelete = async (id) => {\n    if (window.confirm(\"Tem certeza?\")) {\n      try {\n        await axios.delete(`${API_URL}/ordens_auto/${id}`, authHeaders);\n        carregarDadosIniciais();\n      } catch (error) {\n        alert('Erro ao excluir ordem.');\n      }\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if (name === 'conta_id') {\n      const contaSelecionada = contas.find(c => c.id === parseInt(value));\n      setForm(prev => ({\n        ...prev, conta_id: value,\n        corretora: contaSelecionada ? contaSelecionada.corretora.toLowerCase() : '',\n        moeda: '', valor_atual: ''\n      }));\n    } else {\n      setForm(prev => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const url = editId ? `${API_URL}/ordens_auto/${editId}` : `${API_URL}/ordens_auto`;\n    const method = editId ? 'put' : 'post';\n    try {\n      await axios[method](url, form, authHeaders);\n      alert(`✅ Ordem ${editId ? 'atualizada' : 'salva'} com sucesso!`);\n      resetForm();\n      carregarDadosIniciais();\n    } catch (error) {\n      alert(`Erro ao ${editId ? 'atualizar' : 'salvar'} ordem.`);\n    }\n  };\n  \n  const getStatusClassName = (status) => {\n    switch (status?.toLowerCase()) {\n      case 'comprado': return 'status-comprado';\n      case 'vendido': return 'status-vendido';\n      case 'pendente': return 'status-pendente';\n      default: return '';\n    }\n  };\n\n  return (\n    <div className=\"ordens-container\">\n      <div className=\"ordem-form-box\">\n        <h2>{editId ? 'Editar Ordem Automática' : 'Cadastro de Ordem Automática'}</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-grid\">\n            <select name=\"conta_id\" value={form.conta_id} onChange={handleChange} required>\n              <option value=\"\">Selecione a Conta</option>\n              {contas.map(conta => (\n                <option key={conta.id} value={conta.id}>\n                  {conta.nome} ({conta.corretora})\n                </option>\n              ))}\n            </select>\n            <select name=\"moeda\" value={form.moeda} onChange={handleChange} required disabled={!form.corretora}>\n              <option value=\"\">Selecione a moeda</option>\n              {moedasDisponiveis.map((moeda, idx) => <option key={idx} value={moeda}>{moeda}</option>)}\n            </select>\n            <input name=\"valor_atual\" placeholder=\"Valor Atual (USD)\" type=\"text\" value={form.valor_atual} readOnly />\n            <input name=\"valor_ordem\" placeholder=\"Valor da Ordem (USDT)\" type=\"number\" step=\"0.01\" value={form.valor_ordem} onChange={handleChange} required />\n            <input name=\"percentual_compra\" placeholder=\"% Queda p/ Compra\" type=\"number\" step=\"0.01\" value={form.percentual_compra} onChange={handleChange} required />\n            <input name=\"valor_compra\" placeholder=\"Valor de Compra\" type=\"number\" step=\"any\" value={form.valor_compra} readOnly />\n            <input name=\"percentual_venda\" placeholder=\"% Alta p/ Venda\" type=\"number\" step=\"0.01\" value={form.percentual_venda} onChange={handleChange} required />\n            <input name=\"valor_venda\" placeholder=\"Valor de Venda\" type=\"number\" step=\"any\" value={form.valor_venda} readOnly />\n          </div>\n          <div className=\"botoes-acao-ordem\">\n            {editId && (<button type=\"button\" className=\"btn cancelar\" onClick={resetForm}>Cancelar</button>)}\n            <button type=\"submit\" className=\"btn salvar\">{editId ? 'Atualizar Ordem' : 'Salvar Ordem'}</button>\n          </div>\n        </form>\n      </div>\n      <div className=\"ordens-grid\">\n        <h3>Ordens Cadastradas</h3>\n        <table>\n          <thead>\n            <tr>\n              <th>Conta</th><th>Moeda</th><th>Valor Ordem</th><th>Valor Compra</th>\n              <th>Valor Venda</th><th>Status</th><th>Ações</th>\n            </tr>\n          </thead>\n          <tbody>\n            {ordens.map((ordem) => (\n              <tr key={ordem.id}>\n                <td>{contas.find(c => c.id === ordem.conta_id)?.nome || 'N/A'}</td>\n                <td>{ordem.moeda}</td>\n                <td>${parseFloat(ordem.valor_ordem).toFixed(2)}</td>\n                <td>${parseFloat(ordem.valor_compra).toFixed(2)}</td>\n                <td>${parseFloat(ordem.valor_venda).toFixed(2)}</td>\n                <td><span className={getStatusClassName(ordem.status)}>{ordem.status}</span></td>\n                <td className=\"botoes-acao-tabela\">\n                  <button onClick={() => handleEdit(ordem)} className=\"btn-editar\">Editar</button>\n                  <button onClick={() => handleDelete(ordem.id)} className=\"btn-excluir\">Excluir</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default OrdensAuto;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}