{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\Projetos\\\\node.js\\\\criptogt\\\\frontend\\\\src\\\\pages\\\\OrdensAuto.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './OrdensAuto.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdensAuto = () => {\n  _s();\n  const [contas, setContas] = useState([]);\n  const [moedasDisponiveis, setMoedasDisponiveis] = useState([]);\n  const [ordens, setOrdens] = useState([]);\n  const [form, setForm] = useState({\n    conta_id: '',\n    corretora: '',\n    moeda: '',\n    valor_atual: '',\n    percentual_compra: '',\n    percentual_venda: '',\n    valor_ordem: '',\n    valor_compra: '',\n    valor_venda: ''\n  });\n  useEffect(() => {\n    carregarContas();\n    carregarOrdens();\n  }, []);\n  useEffect(() => {\n    const carregarMoedas = async () => {\n      try {\n        if (form.corretora === 'binance') {\n          const res = await axios.get('http://localhost:5000/api/cotacao/symbols');\n          setMoedasDisponiveis(res.data);\n        } else if (form.corretora === 'gateio') {\n          const res = await axios.get(`http://localhost:5000/api/gateio/symbols`);\n          setMoedasDisponiveis(res.data);\n        } else {\n          setMoedasDisponiveis([]);\n        }\n      } catch (err) {\n        setMoedasDisponiveis([]);\n        console.error('Erro ao carregar moedas da corretora:', err);\n      }\n    };\n    if (form.corretora) {\n      carregarMoedas();\n    }\n  }, [form.corretora]);\n  useEffect(() => {\n    const va = parseFloat(form.valor_atual);\n    const pc = parseFloat(form.percentual_compra);\n    const pv = parseFloat(form.percentual_venda);\n    if (!isNaN(va) && !isNaN(pc)) {\n      setForm(prev => ({\n        ...prev,\n        valor_compra: (va * (1 - pc / 100)).toFixed(2)\n      }));\n    }\n    if (!isNaN(va) && !isNaN(pv)) {\n      setForm(prev => ({\n        ...prev,\n        valor_venda: (va * (1 + pv / 100)).toFixed(2)\n      }));\n    }\n  }, [form.valor_atual, form.percentual_compra, form.percentual_venda]);\n  useEffect(() => {\n    const buscarCotacao = async () => {\n      if (!form.moeda || !form.corretora) return;\n      try {\n        const res = await axios.get(`http://localhost:5000/api/cotacao/binance/${form.moeda}`);\n        const valor = parseFloat(res.data.valor_atual);\n        setForm(prev => ({\n          ...prev,\n          valor_atual: valor.toFixed(2)\n        }));\n      } catch (err) {\n        alert(`Erro ao buscar valor da moeda: ${err.message}`);\n        console.error(err);\n      }\n    };\n    buscarCotacao();\n  }, [form.moeda, form.corretora]);\n  const carregarContas = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/contas\");\n      setContas(res.data);\n    } catch (err) {\n      console.error(\"Erro ao carregar contas:\", err);\n      alert(\"Não foi possível carregar suas contas.\");\n    }\n  };\n  const carregarOrdens = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/ordens_auto');\n      setOrdens(response.data);\n    } catch (error) {\n      console.error('Erro ao carregar ordens:', error);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'conta_id') {\n      const contaSelecionada = contas.find(c => c.id === parseInt(value));\n      setForm(prev => ({\n        ...prev,\n        conta_id: value,\n        corretora: contaSelecionada ? contaSelecionada.corretora.toLowerCase() : '',\n        moeda: '',\n        valor_atual: ''\n      }));\n    } else {\n      setForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/api/ordens_auto', form);\n      alert('✅ Ordem salva com sucesso!');\n      setForm({\n        conta_id: '',\n        corretora: '',\n        moeda: '',\n        valor_atual: '',\n        percentual_compra: '',\n        percentual_venda: '',\n        valor_ordem: '',\n        valor_compra: '',\n        valor_venda: ''\n      });\n      carregarOrdens();\n    } catch (error) {\n      alert('Erro ao salvar ordem.');\n      console.error(\"Erro no submit:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ordens-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ordens Autom\\xE1ticas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ordem-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"conta_id\",\n          value: form.conta_id,\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecione a Conta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), contas.map(conta => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: conta.id,\n            children: [conta.nome, \" (\", conta.corretora, \")\"]\n          }, conta.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"moeda\",\n          value: form.moeda,\n          onChange: handleChange,\n          required: true,\n          disabled: !form.corretora,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecione a moeda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), moedasDisponiveis.map((moeda, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: moeda,\n            children: moeda\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"valor_atual\",\n          placeholder: \"Valor Atual\",\n          type: \"text\",\n          value: form.valor_atual,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"valor_ordem\",\n          placeholder: \"Valor da Ordem (USDT)\",\n          type: \"number\",\n          step: \"0.01\",\n          value: form.valor_ordem,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"percentual_compra\",\n          placeholder: \"% Queda p/ Compra\",\n          type: \"number\",\n          step: \"0.01\",\n          value: form.percentual_compra,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"percentual_venda\",\n          placeholder: \"% Alta p/ Venda\",\n          type: \"number\",\n          step: \"0.01\",\n          value: form.percentual_venda,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"valor_compra\",\n          placeholder: \"Valor de Compra\",\n          type: \"number\",\n          value: form.valor_compra,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"valor_venda\",\n          placeholder: \"Valor de Venda\",\n          type: \"number\",\n          value: form.valor_venda,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-salvar\",\n        children: \"Salvar Ordem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ordens Cadastradas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ordens-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Conta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Moeda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Vlr. Refer\\xEAncia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"% Compra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"% Venda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valor Ordem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valor Compra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valor Venda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: ordens.map(ordem => {\n          var _contas$find;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_contas$find = contas.find(c => c.id === ordem.conta_id)) === null || _contas$find === void 0 ? void 0 : _contas$find.nome) || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ordem.moeda\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", parseFloat(ordem.valor_referencia).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [ordem.percentual_compra, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [ordem.percentual_venda, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", parseFloat(ordem.valor_ordem).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", parseFloat(ordem.valor_compra).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", parseFloat(ordem.valor_venda).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ordem.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, ordem.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdensAuto, \"4qUy+q11G/MRMVWmCztbEOgW2gA=\");\n_c = OrdensAuto;\nexport default OrdensAuto;\nvar _c;\n$RefreshReg$(_c, \"OrdensAuto\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","OrdensAuto","_s","contas","setContas","moedasDisponiveis","setMoedasDisponiveis","ordens","setOrdens","form","setForm","conta_id","corretora","moeda","valor_atual","percentual_compra","percentual_venda","valor_ordem","valor_compra","valor_venda","carregarContas","carregarOrdens","carregarMoedas","res","get","data","err","console","error","va","parseFloat","pc","pv","isNaN","prev","toFixed","buscarCotacao","valor","alert","message","response","handleChange","e","name","value","target","contaSelecionada","find","c","id","parseInt","toLowerCase","handleSubmit","preventDefault","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","map","conta","nome","disabled","idx","placeholder","type","readOnly","step","ordem","_contas$find","valor_referencia","status","_c","$RefreshReg$"],"sources":["C:/GitHub/Projetos/node.js/criptogt/frontend/src/pages/OrdensAuto.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './OrdensAuto.css';\n\nconst OrdensAuto = () => {\n  const [contas, setContas] = useState([]);\n  const [moedasDisponiveis, setMoedasDisponiveis] = useState([]);\n  const [ordens, setOrdens] = useState([]);\n  const [form, setForm] = useState({\n    conta_id: '',\n    corretora: '',\n    moeda: '',\n    valor_atual: '',\n    percentual_compra: '',\n    percentual_venda: '',\n    valor_ordem: '',\n    valor_compra: '',\n    valor_venda: ''\n  });\n\n  useEffect(() => {\n    carregarContas();\n    carregarOrdens();\n  }, []);\n  \n  useEffect(() => {\n    const carregarMoedas = async () => {\n      try {\n        if (form.corretora === 'binance') {\n          const res = await axios.get('http://localhost:5000/api/cotacao/symbols');\n          setMoedasDisponiveis(res.data);\n        } else if (form.corretora === 'gateio') {\n          const res = await axios.get(`http://localhost:5000/api/gateio/symbols`);\n          setMoedasDisponiveis(res.data);\n        } else {\n          setMoedasDisponiveis([]);\n        }\n      } catch (err) {\n        setMoedasDisponiveis([]);\n        console.error('Erro ao carregar moedas da corretora:', err);\n      }\n    };\n\n    if (form.corretora) {\n      carregarMoedas();\n    }\n  }, [form.corretora]);\n\n  useEffect(() => {\n    const va = parseFloat(form.valor_atual);\n    const pc = parseFloat(form.percentual_compra);\n    const pv = parseFloat(form.percentual_venda);\n\n    if (!isNaN(va) && !isNaN(pc)) {\n      setForm(prev => ({\n        ...prev,\n        valor_compra: (va * (1 - pc / 100)).toFixed(2),\n      }));\n    }\n    if (!isNaN(va) && !isNaN(pv)) {\n      setForm(prev => ({\n        ...prev,\n        valor_venda: (va * (1 + pv / 100)).toFixed(2),\n      }));\n    }\n  }, [form.valor_atual, form.percentual_compra, form.percentual_venda]);\n\n  useEffect(() => {\n    const buscarCotacao = async () => {\n      if (!form.moeda || !form.corretora) return;\n\n      try {\n        const res = await axios.get(`http://localhost:5000/api/cotacao/binance/${form.moeda}`);\n        const valor = parseFloat(res.data.valor_atual);\n        setForm(prev => ({\n          ...prev,\n          valor_atual: valor.toFixed(2),\n        }));\n      } catch (err) {\n        alert(`Erro ao buscar valor da moeda: ${err.message}`);\n        console.error(err);\n      }\n    };\n\n    buscarCotacao();\n  }, [form.moeda, form.corretora]);\n\n  const carregarContas = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/contas\");\n      setContas(res.data);\n    } catch (err) {\n      console.error(\"Erro ao carregar contas:\", err);\n      alert(\"Não foi possível carregar suas contas.\");\n    }\n  };\n\n  const carregarOrdens = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/ordens_auto');\n      setOrdens(response.data);\n    } catch (error) {\n      console.error('Erro ao carregar ordens:', error);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === 'conta_id') {\n      const contaSelecionada = contas.find(c => c.id === parseInt(value));\n      setForm(prev => ({\n        ...prev,\n        conta_id: value,\n        corretora: contaSelecionada ? contaSelecionada.corretora.toLowerCase() : '',\n        moeda: '',\n        valor_atual: ''\n      }));\n    } else {\n      setForm(prev => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/api/ordens_auto', form);\n      alert('✅ Ordem salva com sucesso!');\n      setForm({\n        conta_id: '',\n        corretora: '',\n        moeda: '',\n        valor_atual: '',\n        percentual_compra: '',\n        percentual_venda: '',\n        valor_ordem: '',\n        valor_compra: '',\n        valor_venda: ''\n      });\n      carregarOrdens();\n    } catch (error) {\n      alert('Erro ao salvar ordem.');\n      console.error(\"Erro no submit:\", error);\n    }\n  };\n\n  return (\n    <div className=\"ordens-container\">\n      <h2>Ordens Automáticas</h2>\n      <form className=\"ordem-form\" onSubmit={handleSubmit}>\n        <div className=\"form-grid\">\n          <select name=\"conta_id\" value={form.conta_id} onChange={handleChange} required>\n            <option value=\"\">Selecione a Conta</option>\n            {contas.map(conta => (\n              <option key={conta.id} value={conta.id}>\n                {conta.nome} ({conta.corretora})\n              </option>\n            ))}\n          </select>\n          <select\n            name=\"moeda\"\n            value={form.moeda}\n            onChange={handleChange}\n            required\n            disabled={!form.corretora}\n          >\n            <option value=\"\">Selecione a moeda</option>\n            {moedasDisponiveis.map((moeda, idx) => (\n              <option key={idx} value={moeda}>{moeda}</option>\n            ))}\n          </select>\n          <input name=\"valor_atual\" placeholder=\"Valor Atual\" type=\"text\" value={form.valor_atual} readOnly />\n          <input name=\"valor_ordem\" placeholder=\"Valor da Ordem (USDT)\" type=\"number\" step=\"0.01\" value={form.valor_ordem} onChange={handleChange} required />\n          <input name=\"percentual_compra\" placeholder=\"% Queda p/ Compra\" type=\"number\" step=\"0.01\" value={form.percentual_compra} onChange={handleChange} required />\n          <input name=\"percentual_venda\" placeholder=\"% Alta p/ Venda\" type=\"number\" step=\"0.01\" value={form.percentual_venda} onChange={handleChange} required />\n          <input name=\"valor_compra\" placeholder=\"Valor de Compra\" type=\"number\" value={form.valor_compra} readOnly />\n          <input name=\"valor_venda\" placeholder=\"Valor de Venda\" type=\"number\" value={form.valor_venda} readOnly />\n        </div>\n        <button type=\"submit\" className=\"btn-salvar\">Salvar Ordem</button>\n      </form>\n\n      <h3>Ordens Cadastradas</h3>\n      <table className=\"ordens-grid\">\n        <thead>\n          <tr>\n            <th>Conta</th>\n            <th>Moeda</th>\n            <th>Vlr. Referência</th>\n            <th>% Compra</th>\n            <th>% Venda</th>\n            <th>Valor Ordem</th>\n            <th>Valor Compra</th>\n            <th>Valor Venda</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {ordens.map((ordem) => (\n            <tr key={ordem.id}>\n              <td>{contas.find(c => c.id === ordem.conta_id)?.nome || 'N/A'}</td>\n              <td>{ordem.moeda}</td>\n              <td>${parseFloat(ordem.valor_referencia).toFixed(2)}</td>\n              <td>{ordem.percentual_compra}%</td>\n              <td>{ordem.percentual_venda}%</td>\n              <td>${parseFloat(ordem.valor_ordem).toFixed(2)}</td>\n              <td>${parseFloat(ordem.valor_compra).toFixed(2)}</td>\n              <td>${parseFloat(ordem.valor_venda).toFixed(2)}</td>\n              <td>{ordem.status}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default OrdensAuto;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}